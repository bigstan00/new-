name: CD
on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  pull_and_run_code:
    runs-on: self-hosted

    steps:
      - name: Stop the container
        run: docker stop test-calc || true

      - name: Remove the container test-calc
        run: docker rm test-calc || true

      - name: Get the code from Docker Hub
        run: docker pull bigstan00/test-image:1

      - name: Run the image as a container
        run: docker run -d -p 3004:3000 --name test-calc bigstan00/test-image:1

      - name: Send Slack message for deployment success
        if: success()
        uses: slackapi/slack-github-action@v1.26.0
        with:
           channel-id: 'D078WC91R62'  # Replace with your channel ID
           slack-message: "Deployment succeeded! ðŸŽ‰\n[Commit URL](${{ github.event.workflow_run.head_commit.url }})"
        env:
           SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Send Slack message for deployment failure
        if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
           channel-id: 'D078WC91R62'  # Replace with your channel ID
           slack-message: "Deployment failed. ðŸ˜ž\n[Commit URL](${{ github.event.workflow_run.head_commit.url }})"
        env:
           SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: "Send email notification for the latest version of the deployment"
        uses: dawidd6/action-send-mail@v3
        with:
         username: ${{ secrets.EMAIL }}
         password: ${{ secrets.EMAIL_PASSWORD }}
         server_address: smtp.gmail.com
         server_port: 465
         secure: true
         subject: "New Docker Image release"
         to: "omenormanagement@gmail.com"
         from: "Admin_DevOps"
         body: "New image release version:1.1"

  deploy:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install kubectl
        run: |
          # Install kubectl
          sudo apt-get update && sudo apt-get install -y apt-transport-https
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo apt-get update
          sudo apt-get install -y kubectl
  install:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Install minikube
          run: |
            # Install minikube
              sudo apt update
              sudo apt install -y curl wget apt-transport-https
              curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
              sudo install minikube-linux-amd64 /usr/local/bin/minikube

        - name: Verifiy minikube installation 
          run: |
            minikube version
            minikube start
