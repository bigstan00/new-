name: CI
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Dependencies
        run: npm install

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        env:
          IMAGE_NAME: test-image
          VERSION: 1
          USERNAME: bigstan00
        run: |
          docker build -t $USERNAME/$IMAGE_NAME:$VERSION .

      - name: Push Docker image to Docker Hub
        env:
          IMAGE_NAME: test-image
          VERSION: 1
          USERNAME: bigstan00
        run: |
          docker push $USERNAME/$IMAGE_NAME:$VERSION

  notify:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Send Slack message for build success
        if: success()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'D078WC91R62'  # Replace with your channel ID
          slack-message: "GitHub build succeeded! 🎉\n[Build URL](${{ github.event.head_commit.url }})"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Send Slack message for build failure
        if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'D078WC91R62'  # Replace with your channel ID
          slack-message: "GitHub build failed. 😞\n[Build URL](${{ github.event.head_commit.url }})"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install kubectl
        run: |
          # Install kubectl
          sudo apt-get update && sudo apt-get install -y apt-transport-https
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo apt-get update
          sudo apt-get install -y kubectl

      - name: Verify kubectl version
        run: kubectl version --client
  install:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Install minikube
          run: |
            # Install minikube
              sudo apt update
              sudo apt install -y curl wget apt-transport-https
              curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
              sudo install minikube-linux-amd64 /usr/local/bin/minikube

        - name: Verifiy minikube installation 
          run: |
            minikube version
            minikube start
        

        - name: Deploy to Kubernetes
          run: |
            echo"apiVersion: apps/v1
            kind: Deployment
            type: rolling deployment
            metadata:
              name: docker-app
            spec:
            replicas: 3
            selector:
              matchLabels:
                app: app
            template:
              metadata:
                labels:
                  app: app
              spec:
                containers:
                  - name: docker-app
                    image: dockersamples/static-site:latest
                    ports:
                      - containerPort: 80" > deployment.yaml
              kubectl apply -f deployment.yaml
                

        - name: Check deployment status 
          run: |
            kubectl rollout status deployment/docker-app





